spring:
  application:
    name: bff-orchestration
  
  cache:
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=5m,recordStats

server:
  port: 8081
  servlet:
    context-path: /

# Service URLs
services:
  user-service:
    url: http://localhost:8081
    timeout: 5000
    retry: 3
  product-service:
    url: http://localhost:8082
    timeout: 5000
    retry: 3

# Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      user-service:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      product-service:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
  retry:
    instances:
      user-service:
        maxAttempts: 3
        waitDuration: 1000ms
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
      product-service:
        maxAttempts: 3
        waitDuration: 1000ms
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,circuitbreakers,caches
  endpoint:
    health:
      show-details: always
      show-components: always
  health:
    circuitbreakers:
      enabled: true
  info:
    env:
      enabled: true

# Logging
logging:
  level:
    com.shopster.bff: INFO
    io.github.resilience4j: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Application Info
info:
  app:
    name: Shopster BFF Orchestration Service
    description: Backend for Frontend orchestration layer for Shopster ecommerce platform
    version: 1.0.0

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev

services:
  user-service:
    url: http://localhost:8081
  product-service:
    url: http://localhost:8082

logging:
  level:
    com.shopster.bff: DEBUG
    io.github.resilience4j: DEBUG

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test

services:
  user-service:
    url: http://localhost:18081
  product-service:
    url: http://localhost:18082